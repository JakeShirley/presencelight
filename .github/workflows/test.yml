# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      GitHubReleaseUrl: https://github.com/isaacrlevin/presencelight/releases/download/Desktop-

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
    
      - name: Get Version from File
        run: |
          version="4.1.10"
          echo "VERSION=$version" >> $GITHUB_ENV
        shell: bash

      - name: Update Winget Yaml
        run: |
          # Hash the Zip Files
          mkdir "${{ github.workspace }}/Download"

          Invoke-WebRequest -Uri "${{ env.GitHubReleaseUrl }}v${{ env.VERSION }}/PresenceLight.${{ env.VERSION }}-x64.zip" -OutFile "${{ github.workspace }}/Download/PresenceLight.${{ env.VERSION }}-x64.zip"
          $hash64=Get-Filehash ${{ github.workspace }}/Download/PresenceLight.${{ env.VERSION }}-x64.zip

          # Update winget.yaml
          $yaml = Get-Content -path "${{ github.workspace }}/Build/winget.yaml"
          $yaml = $yaml -replace '{x64Link}' , "${{ env.GitHubReleaseUrl }}v${{ env.VERSION }}/PresenceLight.${{ env.VERSION }}-x64.zip"
          $yaml = $yaml -replace '{HASHx64}', $hash64.Hash
          $yaml = $yaml -replace '{VERSION}', ${{ env.VERSION }}
          $yaml | Set-Content -Path "${{ github.workspace }}/Build/${{ env.VERSION }}.yaml"
        shell: pwsh

      - name: Add Version File to Artifact
        run : |
          New-Item -Path ${{ github.workspace }} -Name "token.txt" -ItemType "file" -Value "${{ secrets.GHCliToken }}"
        shell: pwsh

      - name: Install GH Cli
        run: |
          brew install gh
          
      - name: GitHub Cli Auth
        run: |
          gh auth login --with-token < "${{ github.workspace }}/token.txt"
          
      - name: Start SSH via tmate
        uses: P3TERX/ssh2actions@main

      - name: GitHub Cli Fork
        run: |
          cd ~
          gh repo fork microsoft/winget-pkgs --clone=true --remote=true
      
      - name: GitHub Cli
        run: |
          cp "${{ github.workspace }}/Build/${{ env.VERSION }}.yaml" "~/winget-pkgs/manifests/isaaclevin/presencelight"

          cd "~/winget-pkgs"

          git config --global user.email "github-action@microsoft.com"
          git config --global user.name "GitHub Action"

          git add .
          git commit -m "Submitting  PresenceLight version ${{ env.VERSION }}.yaml"
          git push

          gh pr create --title "Submitting  PresenceLight version ${{ env.VERSION }}.yaml" -R microsoft/winget-pkgs

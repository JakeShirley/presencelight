name: Build and Sign

on:
  workflow_dispatch:
    inputs:
      matrix:
        description: 'Matrix of Channel Names to Sign'
        required: true
        default: '{}'
        type: string

  workflow_call:

jobs:

  use_matrix:
    permissions:
      id-token: write # Required for requesting the JWT
    environment:
        name: Code_Signing
        # url: ${{ steps.deploy_staging.outputs.webapp-url }}
    name: Code Sign Web
    runs-on: windows-latest

    # strategy:
    #   matrix:
    #     include:
    #       - ChannelName: Windows_x64_x86
    #       - ChannelName: Windows_ARM
    #       - ChannelName: macOS
    #       - ChannelName: Linux_ARM
    #       - ChannelName: Linux_ARM64
    #       - ChannelName: Linux_Musl_x64
    #       - ChannelName: Linux_Musl_ARM_x64

    strategy:
      matrix: ${{ fromJson(inputs.Matrix) }}
    steps:

      - name: Download Matrix Artifact
        uses: actions/download-artifact@v2
        with:
          name: matrix-artifact
          path: ${{ runner.workspace }}/matrix-artifact

      - name: Set Matrix Strategy
        id: set_matrix_strategy
        run: |
          matrix_values=$(cat ${{ runner.workspace }}/matrix-artifact/matrix.txt)
          matrix_strategy="[${matrix_values}]"
          echo "::set-output name=matrix_strategy::${matrix_strategy}"

  run-tests:
    needs: use_matrix
    strategy:
      matrix: ${{fromJson(needs.use_matrix.outputs.matrix_strategy)}}

    runs-on: windows-latest

    steps:
    - name: Download ${{ matrix.value }} Artifacts
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.value }}
        path: ${{ github.workspace }}\ToSign\${{ matrix.value }}

    - uses: actions/download-artifact@v2
      name: Download Signing Scripts Artifacts
      with:
        name: SigningScripts
        path: "${{ github.workspace }}/SigningScripts"

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.x

    - name: Install Sign CLI tool
      run: dotnet tool install --tool-path . sign --version 0.9.0-beta.23063.3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Sign artifacts
      shell: pwsh
      run: >
        ./sign code azure-key-vault
        '**/*.{exe,zip}'
        --timestamp-url "http://timestamp.digicert.com"
        --base-directory "${{ github.workspace }}/ToSign"
        --file-list "${{ github.workspace }}/SigningScripts/filelist.txt"
        --publisher-name "Isaac Levin"
        --description "PresenceLight"
        --description-url "https://github.com/isaacrlevin/presencelight"
        --azure-key-vault-managed-identity true
        --azure-key-vault-url "${{ secrets.KEY_VAULT_URL }}"
        --azure-key-vault-certificate "${{ secrets.KEY_VAULT_CERTIFICATE_ID }}"
        --verbosity Trace

    - name: Publish Signed ${{ matrix.value }} Packages
      uses: actions/upload-artifact@v2
      with:
        path: ${{ github.workspace }}\ToSign\${{ matrix.value }}
        name: '${{ matrix.value }}_Signed'
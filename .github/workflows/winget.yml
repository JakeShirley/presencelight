# This is a basic workflow to help you get started with Actions

name: Test Winget

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "Version Number of PresenceLight"
        required: true
        default: "1.0.0.0"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Deploy_WinGet:
    name: Deploy WPF WinGet
    runs-on: ubuntu-latest
    env:
      GitHubReleaseUrl: https://github.com/isaacrlevin/presencelight/releases/download/Desktop-
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Update Winget Yaml
        run: |
          # Hash the Zip Files
          mkdir "${{ github.workspace }}/Download"
          Invoke-WebRequest -Uri "${{ env.GitHubReleaseUrl }}v${{ github.event.inputs.version }}/PresenceLight.Package_${{ github.event.inputs.version }}.0_x64.appxbundle" -OutFile "${{ github.workspace }}/Download/PresenceLight.Package_${{ github.event.inputs.version }}.0_x64.appxbundle"
          $hash64=Get-Filehash ${{ github.workspace }}/Download/PresenceLight.Package_${{ github.event.inputs.version }}.0_x64.appxbundle
          # Update isaaclevin.presencelight.installer.yaml
          $yaml = Get-Content -path "${{ github.workspace }}/Build/winget/isaaclevin.presencelight.installer.yaml"
          $yaml = $yaml -replace '{x64Link}' , "${{ env.GitHubReleaseUrl }}v${{ github.event.inputs.version }}/PresenceLight.Package_${{ github.event.inputs.version }}.0_x64.appxbundle"
          $yaml = $yaml -replace '{HASHx64}', $hash64.Hash
          $yaml = $yaml -replace '{VERSION}', " ${{ github.event.inputs.version }}"
          $yaml | Set-Content -Path "${{ github.workspace }}/Build/winget/isaaclevin.presencelight.installer.yaml"
          # Update isaaclevin.presencelight.locale.en-US.yaml
          $yaml = Get-Content -path "${{ github.workspace }}/Build/winget/isaaclevin.presencelight.installer.yaml"
          $yaml = $yaml -replace '{VERSION}', " ${{ github.event.inputs.version }}"
          $yaml | Set-Content -Path "${{ github.workspace }}/Build/winget/isaaclevin.presencelight.installer.yaml"
          # Update isaaclevin.presencelight.yaml
          $yaml = Get-Content -path "${{ github.workspace }}/Build/winget/isaaclevin.presencelight.yaml"
          $yaml = $yaml -replace '{VERSION}', " ${{ github.event.inputs.version }}"
          $yaml | Set-Content -Path "${{ github.workspace }}/Build/winget/isaaclevin.presencelight.yaml"
        shell: pwsh

      - name: Add Version File to Artifact
        run : |
          New-Item -Path ${{ github.workspace }} -Name "token.txt" -ItemType "file" -Value "${{ secrets.GHCliToken }}"
        shell: pwsh

      - name: GitHub Cli Auth
        run: |
          gh auth login --with-token < "${{ github.workspace }}/token.txt"
      - name: GitHub Cli Fork
        run: |
          cd ~
          gh repo fork microsoft/winget-pkgs --clone=false
          git clone "https://${{ secrets.GHCliToken  }}@github.com/isaacrlevin/winget-pkgs.git"
          dir
      - name: GitHub Cli
        run: |
          mkdir -p "~/winget-pkgs/manifests/i/isaaclevin/presencelight/${{ github.event.inputs.version }}"
          cp "${{ github.workspace }}/Build/winget/isaaclevin.presencelight.installer.yaml" "~/winget-pkgs/manifests/i/isaaclevin/presencelight/${{ github.event.inputs.version }}"
          cp "${{ github.workspace }}/Build/winget/isaaclevin.presencelight.yaml" "~/winget-pkgs/manifests/i/isaaclevin/presencelight/${{ github.event.inputs.version }}"
          cp "${{ github.workspace }}/Build/winget/isaaclevin.presencelight.locale.en-US.yaml" "~/winget-pkgs/manifests/i/isaaclevin/presencelight/${{ github.event.inputs.version }}"          
          cd ~/winget-pkgs
          git config --global user.email "github-action@microsoft.com"
          git config --global user.name "GitHub Action"
          git add .
          git commit -m "Submitting  PresenceLight version ${{ github.event.inputs.version }}.yaml"
          git push
          COMMIT_MESSAGE="Adding PresenceLight Version: ${{ env.GitHubReleaseUrl }}v${{ github.event.inputs.version }}/PresenceLight.Package_${{ github.event.inputs.version }}.0_x64.appxbundle"
          gh pr create --title "Submitting  PresenceLight Version ${{ github.event.inputs.version }}" --body "$COMMIT_MESSAGE" -R microsoft/winget-pkgs
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
